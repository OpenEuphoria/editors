; -!- emf -!-
;
; Created:     2008-06-21
; Modified:    2009-09-06
; Synopsis:    Euphoria 4.0 mode hook
; Authors:     Jeremy Cowgar
;

define-macro fhook-euphoria
    set-variable $buffer-mask "luh1"
    @# buffer-init "euphoria"
    buffer-init-hooks
!emacro

; buffer-init variables
set-variable .fhook-euphoria.setup &reg "/history/fhook/euphoria" "bdfghnopxlqv"
set-variable .fhook-euphoria.setup-mask "abdefghikmnoptuxclqrvy"
set-variable .fhook-euphoria.comment "|/*| */|*| * | * |fr|"
set-variable .fhook-euphoria.comment-1 "|--||--|-- | --|r|"
set-variable .fhook-euphoria.indent-width 4

; Setup collapse
set-variable .fhook-euphoria.collapse-open "^\\s*\\(global\\|public\\|export\\)?\\s*\\(function\\|procedure\\|type\\)\\s+\\(\\w+\\)"
set-variable .fhook-euphoria.collapse-close "^\\s*end\\s+\\(function\\|procedure\\|type\\)"

; Setup item-list
set-variable .fhook-euphoria.item-list-s1 "^\\s*\\(global\\|public\\|export\\)?\\s*\\(function\\|procedure\\|type\\)\\s+\\(\\w+\\)"
set-variable .fhook-euphoria.item-list-r1 "\\1 \\2 \ecB\\3\ecA"

!if &not &exist .hilight.euphoria
    set-variable .hilight.euphoria &pinc .hilight.next 1
!endif
!if &and &sin "h" .fhook-euphoria.setup &band .hilight.flags 0x02 
    0 hilight .hilight.euphoria 1 $global-scheme
    
    hilight .hilight.euphoria  2 "^#!/"                  .scheme.header
    hilight .hilight.euphoria  2 "--"                    .scheme.comment
    hilight .hilight.euphoria 20 "/\\*" "*/" ""          .scheme.comment
    hilight .hilight.euphoria  4 "\"" "\"" "\\"          .scheme.string
    hilight .hilight.euphoria  4 "'" "'" "\\"            .scheme.string
    hilight .hilight.euphoria  4 "`" "`" ""              .scheme.string
    hilight .hilight.euphoria  4 "\"\"\"" "\"\"\"" ""    .scheme.string   
    
    hilight .hilight.euphoria 1 "export"                 .scheme.keyword
    hilight .hilight.euphoria 1 "public"                 .scheme.keyword
    hilight .hilight.euphoria 1 "global"                 .scheme.keyword
    hilight .hilight.euphoria 1 "override"               .scheme.keyword
    
    hilight .hilight.euphoria 1 "object"                 .scheme.type
    hilight .hilight.euphoria 1 "sequence"               .scheme.type
    hilight .hilight.euphoria 1 "integer"                .scheme.type
    hilight .hilight.euphoria 1 "atom"                   .scheme.type
    hilight .hilight.euphoria 1 "enum"                   .scheme.type
    
    hilight .hilight.euphoria 1 "as"                     .scheme.keyword
    hilight .hilight.euphoria 1 "and"                    .scheme.keyword
    hilight .hilight.euphoria 1 "break"                  .scheme.keyword
    hilight .hilight.euphoria 1 "by"                     .scheme.keyword
    hilight .hilight.euphoria 1 "case"                   .scheme.keyword
    hilight .hilight.euphoria 1 "constant"               .scheme.keyword
    hilight .hilight.euphoria 1 "continue"               .scheme.keyword
    hilight .hilight.euphoria 1 "do"                     .scheme.keyword
    hilight .hilight.euphoria 1 "end"                    .scheme.keyword
    hilight .hilight.euphoria 1 "else"                   .scheme.keyword
    hilight .hilight.euphoria 1 "elsif"                  .scheme.keyword
    hilight .hilight.euphoria 1 "exit"                   .scheme.keyword
    hilight .hilight.euphoria 1 "entry"                  .scheme.keyword
    hilight .hilight.euphoria 1 "for"                    .scheme.keyword
    hilight .hilight.euphoria 1 "function"               .scheme.keyword
    hilight .hilight.euphoria 1 "if"                     .scheme.keyword
    hilight .hilight.euphoria 1 "label"                  .scheme.keyword
    hilight .hilight.euphoria 1 "loop"                   .scheme.keyword
    hilight .hilight.euphoria 1 "not"                    .scheme.keyword
    hilight .hilight.euphoria 1 "or"                     .scheme.keyword
    hilight .hilight.euphoria 1 "procedure"              .scheme.keyword
    hilight .hilight.euphoria 1 "return"                 .scheme.keyword
    hilight .hilight.euphoria 1 "retry"                  .scheme.keyword
    hilight .hilight.euphoria 1 "switch"                 .scheme.keyword
    hilight .hilight.euphoria 1 "then"                   .scheme.keyword
    hilight .hilight.euphoria 1 "type"                   .scheme.keyword
    hilight .hilight.euphoria 1 "to"                     .scheme.keyword
    hilight .hilight.euphoria 1 "while"                  .scheme.keyword
    hilight .hilight.euphoria 1 "until"                  .scheme.keyword
    hilight .hilight.euphoria 1 "xor"                    .scheme.keyword
    
    hilight .hilight.euphoria 1 "elsedef"                .scheme.prepro
    hilight .hilight.euphoria 1 "elsifdef"               .scheme.prepro
    hilight .hilight.euphoria 1 "end ifdef"              .scheme.prepro
    hilight .hilight.euphoria 1 "ifdef"                  .scheme.prepro
    hilight .hilight.euphoria 1 "include"                .scheme.prepro
    hilight .hilight.euphoria 1 "namespace"              .scheme.prepro
    hilight .hilight.euphoria 1 "trace"                  .scheme.prepro
    hilight .hilight.euphoria 1 "with"                   .scheme.prepro
    hilight .hilight.euphoria 1 "without"                .scheme.prepro
    
    hilight .hilight.euphoria 0 "\\+"                    .scheme.operator
    hilight .hilight.euphoria 0 "-"                      .scheme.operator
    hilight .hilight.euphoria 0 "\\*"                    .scheme.operator
    hilight .hilight.euphoria 0 "/"                      .scheme.operator
    hilight .hilight.euphoria 0 "="                      .scheme.operator
    hilight .hilight.euphoria 0 ">"                      .scheme.operator
    hilight .hilight.euphoria 0 "<"                      .scheme.operator
    hilight .hilight.euphoria 0 "\\.\\."                 .scheme.operator
    hilight .hilight.euphoria 0 "[[]"                    .scheme.operator
    hilight .hilight.euphoria 0 "[]]"                    .scheme.operator
    
    hilight .hilight.euphoria 1 "[A-Z][A-Z0-9]+"         .scheme.constant
    
    ; Hilight numbers
    hilight .hilight.euphoria 1 "[[:digit:]_]+"          .scheme.constant
    hilight .hilight.euphoria 1 "-[[:digit:]_]+"         .scheme.constant
    hilight .hilight.euphoria 1 "0b[01_]+"               .scheme.constant
    hilight .hilight.euphoria 1 "0t[0-7_]+"              .scheme.constant
    hilight .hilight.euphoria 1 "0d[0-9_]+"              .scheme.constant
    hilight .hilight.euphoria 1 "0x[0-9A-Fa-f_]+"        .scheme.constant
    hilight .hilight.euphoria 1 "#[0-9A-Fa-f_]+"         .scheme.constant
    
    hilight .hilight.euphoria 1 "[A-Z_][A-Z0-9_]+"       .scheme.constant
    
    ; Allow Euphoria to be embedded in other languages
    set-variable .hilight.euscript .hilight.euphoria
!endif

;!if &sin "d" .fhook-euphoria.setup
;	0 indent .hilight.euphoria 0 25
;        
;        indent .hilight.euphoria N "^\\s*global\\s*function" t
;        indent .hilight.euphoria N "^\\s*export\\s*function" t
;        indent .hilight.euphoria N "^\\s*function" t
;        indent .hilight.euphoria N "^\\s*global\\s*procedure" t
;        indent .hilight.euphoria N "^\\s*export\\s*procedure" t
;        indent .hilight.euphoria N "^\\s*procedure" t
;        indent .hilight.euphoria N "^\\s*global\\s*type" t
;        indent .hilight.euphoria N "^\\s*export\\s*type" t
;        
;        ; if statement
;        indent .hilight.euphoria N "^\\s*if" t
;        indent .hilight.euphoria S "^\\s*elsif" -t
;        indent .hilight.euphoria S "^\\s*else" -t
;	indent .hilight.euphoria S "^\\s*then" -t
;        
;        ; ifdef statement
;        indent .hilight.euphoria N "^\\s*ifdef" t
;        indent .hilight.euphoria S "^\\s*elsifdef" -t
;        
;        ; switch statement
;        indent .hilight.euphoria N "^\\s*switch" 2t
;        indent .hilight.euphoria S "^\\s*case" -t
;        
;        ; loops
;	indent .hilight.euphoria N "^\\s*while" t
;        indent .hilight.euphoria N "^\\s*for" t
;        indent .hilight.euphoria N "^\\s*loop" t
;        indent .hilight.euphoria S "^\\s*do" -t
;        indent .hilight.euphoria S "^\\s*entry" -t
;        
;        ; end of most statements
;        indent .hilight.euphoria O "^\\s*end\\s+switch" -2t
;        indent .hilight.euphoria O "^\\s*end"         -t
;	
;	; Expressions at the end of a line - try with these
;	indent .hilight.euphoria c "[-+=*/<>]$" t
;		
;        ;indent .hilight.euphoria b "(" ")"
;	;indent .hilight.euphoria b "\\[" "\\]"
;	
;	; ignores
;        indent .hilight.euphoria i "--"
;	indent .hilight.euphoria e "\"" "\"" "\\"
;!endif

buffer-init-fhook "euphoria"
